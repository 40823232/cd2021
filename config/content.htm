<h1>About</h1>
<p><strong>stage1-bg20</strong></p>
<p><strong>組員:40823213,40823232</strong></p>
<p><strong>stage1組別網站:<a href="https://40823232.github.io/stage1-bg20/content/index.html" rel="nofollow">https://40823232.github.io/stage1-bg20/content/index.html</a></strong></p>
<p><strong>stage1 gitter:<a href="https://gitter.im/2020bg5/stage1-bg20">https://gitter.im/stage1-bg20/community</a></strong></p>
<p><strong>stage2-bg2</strong></p>
<p><strong>組員:40823213,40823232,40823234,40823235</strong></p>
<p><strong>stage2組別網站:<a href="https://40823232.github.io/stage2-bg2/content/index.html">https://40823232.github.io/stage2-bg2/content/index.html</a></strong></p>
<p><strong>stage2 gitter:<a href="https://gitter.im/stage2-bg2/community">https://gitter.im/stage2-bg2/community</a></strong></p>
<p><strong>stage3-bg1</strong></p>
<p><strong>組員:40823208,40823213,40823232,40823234,40823235,40823245,40823246,40823251</strong></p>
<p><strong>stage3組別網站:<a href="https://40823232.github.io/stage3-bg1/content/index.html">https://40823232.github.io/stage3-bg1/content/index.html</a></strong></p>
<p><strong>stage3 gitter:<a href="https://gitter.im/stage3-bg1/community">https://gitter.im/stage3-bg1/community</a></strong></p>
<h1>stage1各週進度</h1>
<p>建立網站並且分配組員工作。</p>
<h2>w1</h2>
<p>建立網站:<a href="https://40823232.github.io/cd2021/content/index.html">https://40823232.github.io/cd2021/content/index.html</a></p>
<p>建立網站影片：</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/sQNwJw_0e8A" width="560"></iframe></p>
<p>stage1 gitter:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/dMTrcQpoMTI" width="560"></iframe></p>
<h2>w2討論主題</h2>
<p>進度規劃:</p>
<p><span>題目:遊樂設施</span><br/><span>動機:了解設施的構造，和作動的方式</span><br/><span>第二週:繪製零件圖，並使用coppeliasim進行模擬</span><br/><span>第三週:模擬問題討論及修改</span><br/><span>第四週:報告</span></p>
<h2>w3模擬</h2>
<p><span>桿子裝上馬達後無法控制升降的角度，因此嘗試使用連桿機構</span></p>
<p><span><a href="/downloads/試.ttt">模擬.ttt</a></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0NmMCvQcRZI" width="560"></iframe></p>
<p><span>因為這次主題需要用到連桿機構，故模擬pyslvs。</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" src="https://www.youtube.com/embed/-B89z-x6EJs" width="560"></iframe></p>
<p>第一次模擬，雖然物體有升降，但路徑不是我們需要的</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" src="https://www.youtube.com/embed/kchUARIZGBQ" width="560"></iframe></p>
<p>第二次模擬，路徑接近但滑塊會延伸過長，升降的範圍也較小。</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" src="https://www.youtube.com/embed/j3qT5Tb-TvU" width="560"></iframe></p>
<p>第三次模擬，前方在下降的時候，會微微向前傾斜</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="315" src="https://www.youtube.com/embed/M3PCjYE4Bk0" width="560"></iframe></p>
<p>第四次模擬，讓前方升降過程較為穩定</p>
<h2>w4報告</h2>
<p>小組每週報告:<a href="https://drive.google.com/file/d/1S_Bhv-FLX_4Cjk0eJq1HG1aufmpVPUrR/view?usp=sharing" title="stage1-bg20">stage1-bg20.pdf</a></p>
<p>小組reveal:<a href="https://40823232.github.io/stage1-bg20/reveal/index.html#/">https://40823232.github.io/stage1-bg20/reveal/index.html#/</a></p>
<p>個人報告影片:<a href="https://40823232.github.io/stage1-bg20/downloads/stage1-bg20.pdf" title="stage1-bg20"><br/><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/KtVmy-Y__zw" width="560"></iframe><br/></a></p>
<p><span>小組報告影片:</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/NRdk9HfxXZE" title="YouTube video player" width="560"></iframe></p>
<p><strong><a href="/downloads/試.ttt">模擬.ttt</a>  <a href="/downloads/組合.stl">組合.stl</a></strong></p>
<h1>stage2各週進度</h1>
<p>我們的主題要沿用stage1，並加以改良</p>
<h2>w6</h2>
<p><strong>我們想利用三角函數的曲線驅動桿子沿著此路徑移動(繪圖者:40823213)</strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="300" src="https://www.youtube.com/embed/DgqrmOVxLLM" title="YouTube video player" width="500"></iframe></p>
<p><a href="/downloads/支架.ipt">支架.ipt</a></p>
<p><a href="/downloads/主體.ipt">主體.ipt</a></p>
<p><a href="/downloads/底座.ipt">底座.ipt</a></p>
<p><a href="/downloads/容器.ipt">容器.ipt</a></p>
<p><a href="/downloads/組合3.iam">組合.iam</a></p>
<p><a href="/downloads/3d凸輪.ipt">3d凸輪.ipt</a></p>
<p><strong>第一次模擬(模擬者:40823234)<a href="/downloads/stage2.ttt">第一次模擬.ttt</a></strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="https://www.youtube.com/embed/Qs_aJNafFXQ" width="500"></iframe></p>
<p><strong>在模擬後發現桿子沿著弧線移動時，弧線的波落差大，在移動的時候會有干涉</strong></p>
<h2>w7</h2>
<p><strong>第二次模擬(模擬者:40823234)<a href="/downloads/4-14.ttt">第二次模擬.ttt</a></strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="https://www.youtube.com/embed/Ek2iuTPmg3w" width="500"></iframe></p>
<p><strong>改為平緩的弧線後，發現桿子移動一小段距離</strong><strong>，桿子的長度無法在弧線上約束</strong></p>
<p><strong>第三次模擬(模擬者:40823234)<a href="/downloads/4-16.ttt">第三次模擬.ttt</a></strong></p>
<p><iframe allowfullscreen="allowfullscreen" height="300" src="https://www.youtube.com/embed/XgOSriiNNqY" width="500"></iframe></p>
<p><strong>採用圓柱凸輪後，能夠約束桿子，不過旋轉中還是有抖動</strong></p>
<p>零件檔:</p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E5%87%B8%E8%BC%AA%E8%A8%AD%E8%A8%884-9.ipt">凸輪(第一版).ipt</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E4%B8%BB%E9%AB%944-9-1.ipt">主體.ipt</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E6%94%AF%E6%9E%B64-9.ipt">支架.ipt</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E5%AE%B9%E5%99%A8.ipt">容器.ipt</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E7%B5%84%E5%90%88(%E4%BF%AE%E6%94%B94-11).iam">組合.iam</a></p>
<p>w7</p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E6%94%AF%E6%9E%B64-9.ipt">支架4-9.ipt</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E4%B8%BB%E9%AB%944-9-1.ipt">主體4-9-1.ipt</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E5%87%B8%E8%BC%AA%E8%A8%AD%E8%A8%884-9.ipt">凸輪設計4-9.ipt</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E7%B5%84%E5%90%88(%E4%BF%AE%E6%94%B94-11).iam">組合(修改4-11).iam</a></p>
<p>w8</p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E7%B5%84%E5%90%884-16.iam">凸輪4-1</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E7%B5%84%E5%90%884-17.iam">組合4-17</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E6%94%AF%E6%9E%B64-17.ipt">支架4-17</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E7%B5%84%E5%90%884-15.iam">組合4-15</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E6%94%AF%E6%9E%B64-15.ipt">支架4-15</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E6%94%AF%E6%9E%B64-17-2.ipt">支架4-15-2</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/3d%E5%87%B8%E8%BC%AA4-16.ipt">凸輪4-16</a></p>
<p>w9</p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E7%B5%84%E5%90%88.iam">組合</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/%E6%94%AF%E6%9E%B64-17%E7%B8%AE%E5%B0%8F%E7%90%83%E9%AB%94.ipt">支架4-17縮小球體.ipt</a></p>
<p><a href="https://40823213.github.io/stage2-bg2/downloads/3d%E5%87%B8%E8%BC%AA4-16(%E7%AC%AC%E4%B8%89%E6%94%B9%E6%B3%95).ipt">3d凸輪4-16(第三改法).ipt</a></p>
<h2>w8</h2>
<p>建立heroku(教學在note裡)</p>
<p>heroku:<a class="hk-link" href="https://s40823232.herokuapp.com/" target="_blank">https://s40823232.herokuapp.com/</a></p>
<h2>w9報告</h2>
<p>小組報告影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/CdGrZxv6S-g" title="YouTube video player" width="560"></iframe></p>
<p>reveal:<a href="https://40823232.github.io/stage2-bg2/reveal/index.html#/">https://40823232.github.io/stage2-bg2/reveal/index.html#/</a></p>
<p>pdf:<a href="https://drive.google.com/file/d/19qYz3ii_0UKM6-LDgllXJ0c9eKCVnI4A/view?usp=sharing">https://drive.google.com/file/d/19qYz3ii_0UKM6-LDgllXJ0c9eKCVnI4A/view?usp=sharing</a></p>
<p>最後產出類模組化設定</p>
<p>1.像這樣的凸輪上面有特製的紋路可供支架跑</p>
<p><img alt="" height="233" src="https://40823213.github.io/stage2-bg2/images/4-22.PNG" width="500"/></p>
<p>2.支架講解</p>
<p>支架在跑的時候會變成弧形，為了試驗他的弧形，刻意將桿子設計成可伸縮版本。</p>
<p><img alt="" height="234" src="https://40823213.github.io/stage2-bg2/images/%E8%A8%AD%E8%A8%88%E8%AC%9B%E8%A7%A3.PNG" width="500"/></p>
<p>2.但是如果要隨時改動尺寸的話太不方便了!所以設計這一種可以隨時更動的曲線。藉由改波峰多寡和上下大小來完成各種不同的設計。</p>
<p><img alt="" height="235" src="https://40823213.github.io/stage2-bg2/images/4-22-1.PNG" width="500"/></p>
<p>3.以下是總圖</p>
<p><img alt="" height="236" src="https://40823213.github.io/stage2-bg2/images/4-22-2.PNG" width="500"/></p>
<p>4.講解影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" data-mce-fragment="1" frameborder="0" height="300" src="https://www.youtube.com/embed/gG0rgduvdMY" title="YouTube video player" width="500"></iframe></p>
<p><strong><a href="/downloads/4-16.ttt">模擬.ttt</a>  <a href="/downloads/組合1.stl">組合.stl</a></strong></p>
<p>參考資料</p>
<p><a href="https://www.evget.com/article/2020/8/13/37561.html">https://www.evget.com/article/2020/8/13/37561.html</a></p>
<p><a href="https://www.youtube.com/watch?v=s5O9_Ny9ufA">https://www.youtube.com/watch?v=s5O9_Ny9ufA</a></p>
<h1>stage3各週進度</h1>
<p>以task工作為主，並利用line群組通話討論接下來要做的主題</p>
<h2>w10</h2>
<p>圖檔:<a href="/downloads/掃地機固定.iam">掃地機固定.iam</a>，<a href="/downloads/夾爪組合.iam">夾爪.iam</a></p>
<p>       <a href="/downloads/掃地機固定.stl">掃地機固定.stl</a>，<a href="/downloads/夾爪組合.stl">夾爪.stl</a></p>
<p>gitter:<a href="https://gitter.im/stage3-bg1/community">https://gitter.im/stage3-bg1/community</a></p>
<p>小組討論主題，想把目前各組所做的題目合成一起，讓中間有關聯。</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/xU15Pa6w8Wk" title="YouTube video player" width="560"></iframe></p>
<h3>ipv4連線</h3>
<p><strong>先到網路連線的ipv4更改成192.168.192.各自號碼</strong></p>
<p><img caption="false" height="198" src="/images/螢幕擷取畫面 2021-05-05 143713.png" width="500"/></p>
<p><strong>確定後，到黑窗輸入</strong></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">python -m http.server 8000 --bind 192.168.192.各自號碼</pre>
<p><strong>接著至網址輸入192.168.192.各自號碼：8000，成功後網頁會變這樣</strong></p>
<p><span><strong><img caption="false" height="342" src="/images/螢幕擷取畫面 2021-05-05 143632.png" width="700"/></strong></span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/-iTYWLVWtVQ" title="YouTube video player" width="560"></iframe></p>
<h2>ｗ11</h2>
<p>測試obs直播串流</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/aQz11-3sx2I" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h3>task1</h3>
<p>參考:40823245</p>
<p><a href="https://40823245.github.io/stage3-bg1/downloads/stage3_2b.txt">stage3-2b.txt</a>文字檔</p>
<p>下面程式碼另存一個py檔</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">def stu2b(account):
    if account == "40823231":
        return account + "-2"
    elif account[0:3] == "407":
        return "s" + account
    else:
        return account
 
teamb = []
 
# open file, default is read mode, since txt content no chinese char
# no encoding = "UTF-8" is needed
with open("stage3_2b.txt") as fh:
    # readlines will read into the whole line and put into list format
    # has \n at the end of each line
    data = fh.readlines()
#print(len(data))
for i in range(len(data)):
    group = data[i].rstrip("\n").split("\t")
    teamb.append(group)
     
output = ""    
seperator = "-"*10 + "&lt;br /&gt;"
 
for i in teamb[0:]:
    team = i[0]
    leader = stu2b(i[1])
    m1 = stu2b(i[3])
    m2 = stu2b(i[5])
    m3 = stu2b(i[7])
    m4 = stu2b(i[9])
    m5 = stu2b(i[11])
    m6 = stu2b(i[13])
     
    try:
        m7 = stu2b(i[15])
    except:
        m7 = ""
    try:
        m8 = stu2b(i[17])
    except:
        m8 = ""
         
    leaderrepo = "&lt;a href='http://github.com/" + leader + "/cd2021'&gt;" + leader + " repo&lt;/a&gt;"
    leadersite = "&lt;a href='http://" + leader + ".github.io/cd2021'&gt;" + leader +  " site&lt;/a&gt;"
    m1repo = "&lt;a href='http://github.com/" + m1 + "/cd2021'&gt;" + m1 + " repo&lt;/a&gt;"
    m1site = "&lt;a href='http://" + m1 + ".github.io/cd2021'&gt;" + m1 +  " site&lt;/a&gt;"
    m2repo = "&lt;a href='http://github.com/" + m2 + "/cd2021'&gt;" + m2 + " repo&lt;/a&gt;"
    m2site = "&lt;a href='http://" + m2 + ".github.io/cd2021'&gt;" + m2 +  " site&lt;/a&gt;"
    m3repo = "&lt;a href='http://github.com/" + m3 + "/cd2021'&gt;" + m3 + " repo&lt;/a&gt;"
    m3site = "&lt;a href='http://" + m3 + ".github.io/cd2021'&gt;" + m3 +  " site&lt;/a&gt;"
    m4repo = "&lt;a href='http://github.com/" + m4 + "/cd2021'&gt;" + m4 + " repo&lt;/a&gt;"
    m4site = "&lt;a href='http://" + m4 + ".github.io/cd2021'&gt;" + m4 +  " site&lt;/a&gt;"
    m5repo = "&lt;a href='http://github.com/" + m5 + "/cd2021'&gt;" + m5 + " repo&lt;/a&gt;"
    m5site = "&lt;a href='http://" + m5 + ".github.io/cd2021'&gt;" + m5 +  " site&lt;/a&gt;"
    m6repo = "&lt;a href='http://github.com/" + m6 + "/cd2021'&gt;" + m6 + " repo&lt;/a&gt;"
    m6site = "&lt;a href='http://" + m6 + ".github.io/cd2021'&gt;" + m6 +  " site&lt;/a&gt;"
  
 
    teamrepo = "&lt;a href='http://github.com/" + leader + "/" + team + "'&gt;" + team + " repo&lt;/a&gt;"
    teamsite =  "&lt;a href='http://" + m1 + ".github.io/" + team + "'&gt;" + team +  " site&lt;/a&gt;"
 
    output += teamrepo + " | " + teamsite + " | " +leaderrepo + " | " + leadersite + " | " +m1repo + " | " + m1site + " | " +m2repo + " | " + m2site + " | " +m3repo + " | " + m3site + " | " +m4repo + " | " + m4site + " | " +m5repo + " | " + m5site + " | " +m6repo + " | " + m6site 
     
    if m7 != "":
       m7repo = "&lt;a href='http://github.com/" + m7 + "/cd2021'&gt;" + m7 + " repo&lt;/a&gt;"
       m7site = "&lt;a href='http://" + m7 + ".github.io/cd2021'&gt;" + m7 +  " site&lt;/a&gt;"   
       output += " |  " + m7repo + "| " + m7site
    else:
        output += "" 
     
    if m8 != "":
       m8repo = "&lt;a href='http://github.com/" + m8 + "/cd2021'&gt;" + m8 + " repo&lt;/a&gt;"
       m8site = "&lt;a href='http://" + m8 + ".github.io/cd2021'&gt;" + m8 +  " site&lt;/a&gt;"   
       output += " |  " + m8repo + "| " + m8site + "&lt;br /&gt;" + seperator
    else:
        output += "&lt;br /&gt;" + seperator
 
 
print(output)
# the following will use group data to generate needed html</pre>
<p>在白窗執行，將結果貼上</p>
<p><img alt="" height="450" src="/images/Screenshot 2021-05-07 150804.png" width="800"/></p>
<p><a href="http://github.com/40823245/stage3-bg1">stage3-bg1 repo</a> | <a href="http://40823251.github.io/stage3-bg1">stage3-bg1 site</a> | <a href="http://github.com/40823245/cd2021">40823245 repo</a> | <a href="http://40823245.github.io/cd2021">40823245 site</a> | <a href="http://github.com/40823251/cd2021">40823251 repo</a> | <a href="http://40823251.github.io/cd2021">40823251 site</a> | <a href="http://github.com/40823208/cd2021">40823208 repo</a> | <a href="http://40823208.github.io/cd2021">40823208 site</a> | <a href="http://github.com/40823213/cd2021">40823213 repo</a> | <a href="http://40823213.github.io/cd2021">40823213 site</a> | <a href="http://github.com/40823232/cd2021">40823232 repo</a> | <a href="http://40823232.github.io/cd2021">40823232 site</a> | <a href="http://github.com/40823234/cd2021">40823234 repo</a> | <a href="http://40823234.github.io/cd2021">40823234 site</a> | <a href="http://github.com/40823235/cd2021">40823235 repo</a> | <a href="http://40823235.github.io/cd2021">40823235 site</a> | <a href="http://github.com/40823246/cd2021">40823246 repo</a>| <a href="http://40823246.github.io/cd2021">40823246 site</a><br/>----------<br/><a href="http://github.com/40823217/stage3-bg2">stage3-bg2 repo</a> | <a href="http://40823201.github.io/stage3-bg2">stage3-bg2 site</a> | <a href="http://github.com/40823217/cd2021">40823217 repo</a> | <a href="http://40823217.github.io/cd2021">40823217 site</a> | <a href="http://github.com/40823201/cd2021">40823201 repo</a> | <a href="http://40823201.github.io/cd2021">40823201 site</a> | <a href="http://github.com/40823209/cd2021">40823209 repo</a> | <a href="http://40823209.github.io/cd2021">40823209 site</a> | <a href="http://github.com/40823210/cd2021">40823210 repo</a> | <a href="http://40823210.github.io/cd2021">40823210 site</a> | <a href="http://github.com/40823206/cd2021">40823206 repo</a> | <a href="http://40823206.github.io/cd2021">40823206 site</a> | <a href="http://github.com/40823207/cd2021">40823207 repo</a> | <a href="http://40823207.github.io/cd2021">40823207 site</a> | <a href="http://github.com/40823223/cd2021">40823223 repo</a> | <a href="http://40823223.github.io/cd2021">40823223 site</a> | <a href="http://github.com/40823224/cd2021">40823224 repo</a>| <a href="http://40823224.github.io/cd2021">40823224 site</a><br/>----------<br/><a href="http://github.com/40823236/stage3-bg3">stage3-bg3 repo</a> | <a href="http://40823202.github.io/stage3-bg3">stage3-bg3 site</a> | <a href="http://github.com/40823236/cd2021">40823236 repo</a> | <a href="http://40823236.github.io/cd2021">40823236 site</a> | <a href="http://github.com/40823202/cd2021">40823202 repo</a> | <a href="http://40823202.github.io/cd2021">40823202 site</a> | <a href="http://github.com/40823203/cd2021">40823203 repo</a> | <a href="http://40823203.github.io/cd2021">40823203 site</a> | <a href="http://github.com/40823212/cd2021">40823212 repo</a> | <a href="http://40823212.github.io/cd2021">40823212 site</a> | <a href="http://github.com/40823219/cd2021">40823219 repo</a> | <a href="http://40823219.github.io/cd2021">40823219 site</a> | <a href="http://github.com/40823222/cd2021">40823222 repo</a> | <a href="http://40823222.github.io/cd2021">40823222 site</a> | <a href="http://github.com/40823231-2/cd2021">40823231-2 repo</a> | <a href="http://40823231-2.github.io/cd2021">40823231-2 site</a> | <a href="http://github.com/40823244/cd2021">40823244 repo</a>| <a href="http://40823244.github.io/cd2021">40823244 site</a><br/>----------<br/><a href="http://github.com/40823239/stage3-bg4">stage3-bg4 repo</a> | <a href="http://s40723140.github.io/stage3-bg4">stage3-bg4 site</a> | <a href="http://github.com/40823239/cd2021">40823239 repo</a> | <a href="http://40823239.github.io/cd2021">40823239 site</a> | <a href="http://github.com/s40723140/cd2021">s40723140 repo</a> | <a href="http://s40723140.github.io/cd2021">s40723140 site</a> | <a href="http://github.com/s40723128/cd2021">s40723128 repo</a> | <a href="http://s40723128.github.io/cd2021">s40723128 site</a> | <a href="http://github.com/s40723139/cd2021">s40723139 repo</a> | <a href="http://s40723139.github.io/cd2021">s40723139 site</a> | <a href="http://github.com/s40723106/cd2021">s40723106 repo</a> | <a href="http://s40723106.github.io/cd2021">s40723106 site</a> | <a href="http://github.com/s40723135/cd2021">s40723135 repo</a> | <a href="http://s40723135.github.io/cd2021">s40723135 site</a> | <a href="http://github.com/s40723143/cd2021">s40723143 repo</a> | <a href="http://s40723143.github.io/cd2021">s40723143 site</a> | <a href="http://github.com/s40723215/cd2021">s40723215 repo</a>| <a href="http://s40723215.github.io/cd2021">s40723215 site</a><br/>----------<br/><a href="http://github.com/40823221/stage3-bg5">stage3-bg5 repo</a> | <a href="http://40823204.github.io/stage3-bg5">stage3-bg5 site</a> | <a href="http://github.com/40823221/cd2021">40823221 repo</a> | <a href="http://40823221.github.io/cd2021">40823221 site</a> | <a href="http://github.com/40823204/cd2021">40823204 repo</a> | <a href="http://40823204.github.io/cd2021">40823204 site</a> | <a href="http://github.com/40823205/cd2021">40823205 repo</a> | <a href="http://40823205.github.io/cd2021">40823205 site</a> | <a href="http://github.com/40823220/cd2021">40823220 repo</a> | <a href="http://40823220.github.io/cd2021">40823220 site</a> | <a href="http://github.com/40823228/cd2021">40823228 repo</a> | <a href="http://40823228.github.io/cd2021">40823228 site</a> | <a href="http://github.com/40823237/cd2021">40823237 repo</a> | <a href="http://40823237.github.io/cd2021">40823237 site</a> | <a href="http://github.com/40823242/cd2021">40823242 repo</a> | <a href="http://40823242.github.io/cd2021">40823242 site</a> | <a href="http://github.com/40823250/cd2021">40823250 repo</a>| <a href="http://40823250.github.io/cd2021">40823250 site</a> | <a href="http://github.com/40832244/cd2021">40832244 repo</a>| <a href="http://40832244.github.io/cd2021">40832244 site</a><br/>----------<br/><a href="http://github.com/40823225/stage3-bg6">stage3-bg6 repo</a> | <a href="http://40823214.github.io/stage3-bg6">stage3-bg6 site</a> | <a href="http://github.com/40823225/cd2021">40823225 repo</a> | <a href="http://40823225.github.io/cd2021">40823225 site</a> | <a href="http://github.com/40823214/cd2021">40823214 repo</a> | <a href="http://40823214.github.io/cd2021">40823214 site</a> | <a href="http://github.com/40823218/cd2021">40823218 repo</a> | <a href="http://40823218.github.io/cd2021">40823218 site</a> | <a href="http://github.com/40823211/cd2021">40823211 repo</a> | <a href="http://40823211.github.io/cd2021">40823211 site</a> | <a href="http://github.com/40823248/cd2021">40823248 repo</a> | <a href="http://40823248.github.io/cd2021">40823248 site</a> | <a href="http://github.com/40823247/cd2021">40823247 repo</a> | <a href="http://40823247.github.io/cd2021">40823247 site</a> | <a href="http://github.com/40823216/cd2021">40823216 repo</a> | <a href="http://40823216.github.io/cd2021">40823216 site</a> | <a href="http://github.com/40823238/cd2021">40823238 repo</a>| <a href="http://40823238.github.io/cd2021">40823238 site</a><br/>----------<br/><a href="http://github.com/40623144/stage3-bg7">stage3-bg7 repo</a> | <a href="http://40823233.github.io/stage3-bg7">stage3-bg7 site</a> | <a href="http://github.com/40623144/cd2021">40623144 repo</a> | <a href="http://40623144.github.io/cd2021">40623144 site</a> | <a href="http://github.com/40823233/cd2021">40823233 repo</a> | <a href="http://40823233.github.io/cd2021">40823233 site</a> | <a href="http://github.com/s40723224/cd2021">s40723224 repo</a> | <a href="http://s40723224.github.io/cd2021">s40723224 site</a> | <a href="http://github.com/40823241/cd2021">40823241 repo</a> | <a href="http://40823241.github.io/cd2021">40823241 site</a> | <a href="http://github.com/40423155/cd2021">40423155 repo</a> | <a href="http://40423155.github.io/cd2021">40423155 site</a> | <a href="http://github.com/40823227/cd2021">40823227 repo</a> | <a href="http://40823227.github.io/cd2021">40823227 site</a> | <a href="http://github.com/s40723233/cd2021">s40723233 repo</a> | <a href="http://s40723233.github.io/cd2021">s40723233 site</a><br/>----------</p>
<h2>w12</h2>
<p>task2  測試日期:2021/5/14</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Fl1O_Nr4s-M" title="YouTube video player" width="560"></iframe></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
 
print ('Start')
 
# Close eventual old connections
vrep.simxFinish(-1)
# Connect to V-REP remote server
clientID = vrep.simxStart('192.168.192.115', 19997, True, True, 5000, 5)
 
if clientID != -1:
    print ('Connected to remote API server')
 
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823232",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
    # Communication operating mode with the remote API : wait for its answer before continuing (blocking mode)
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiConstants.htm
    opmode = vrep.simx_opmode_oneshot_wait
 
    # Try to retrieve motors and robot handlers
    # http://www.coppeliarobotics.com/helpFiles/en/remoteApiFunctionsPython.htm#simxGetObjectHandle
    vrep.simxStartSimulation(clientID,opmode)
    ret1,front_handle = vrep.simxGetObjectHandle(clientID, "Revolute_joint", opmode)
    

else:
    print ('Failed connecting to remote API server')</pre>
<h2>w13建立gitlab</h2>
<p>因為個人github遭到封鎖，故建立gitlab</p>
<p>在網頁搜尋gitlab sign up建立自己的帳號，並建立倉儲</p>
<p><img alt="" height="391" src="/images/螢幕擷取畫面 2021-05-24 113343.png" width="800"/></p>
<p>倉儲要設為public且Initialize repository with a README不要打勾。</p>
<p>到黑窗的倉儲輸入git branch查看分支狀態，再到倉儲跟目錄找出.gitlab-ci.yml用白窗打開將master改成main</p>
<p><img alt="" height="652" src="/images/螢幕擷取畫面 2021-05-24 113914.png" width="500"/></p>
<p>save完後acp再輸入</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">git remote add gitlab https://gitlab.com/40823232/倉儲名.git
</pre>
<p>然後git push gitlab。到gitlab確定有推上去(commit會打勾)，再到setting的page重整會有出現網址</p>
<p><img alt="" height="388" src="/images/螢幕擷取畫面 2021-05-24 115408.png" width="800"/></p>
<p>該網址為網站連結。</p>
<p>ssh做法與之前相同，但putty要新增一個gitlab.com到auth選擇鑰匙</p>
<p><img alt="" height="442" src="/images/螢幕擷取畫面 2021-05-24 115814.png" width="452"/></p>
<p><img alt="" height="442" src="/images/螢幕擷取畫面 2021-05-24 115833.png" width="452"/></p>
<h3>小組直播影片</h3>
<p>課堂時段利用google meet進行小組討論</p>
<p>2021/05/21</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/XYh2GjPH3Rg" title="YouTube video player" width="560"></iframe></p>
<p>2021/06/04</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/kOrNTzDhSos" title="YouTube video player" width="560"></iframe></p>
<p>2021/06/11</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/RgAKIdbEygE" title="YouTube video player" width="560"></iframe></p>
<h2>W14</h2>
<p>RoboDK測試:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/D3z56JKyYZ8" title="YouTube video player" width="560"></iframe></p>
<h2>W15</h2>
<p>影片字幕整理</p>
<p>第一部:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/sujf5NZyNQQ" title="YouTube video player" width="560"></iframe></p>
<p>中文字幕:</p>
<p>該機構的提示框由兩個數字簡單描述，相對於絕對坐標系的坐標 x 和 y。</p>
<p>所以，這裡的問題是有了x和y條件，我們要求解連接角q1和q2的值為多少。</p>
<p>我們利用特定幾何來解決這個問題。</p>
<p>我們從一個簡單的結構開始。</p>
<p>我們將在機構上覆蓋紅色三角形。</p>
<p>我們知道最終坐標是x，y，所以三角形的垂直高度為y，水平寬度為x。</p>
<p>然後，利用Pythagorean theorem(畢氏定理)，我們可寫出 r² = x ²+ y²。</p>
<p>到目前為止都很容易。</p>
<p>現在，我們查看此處凸顯的紅色三角形，並且要確定α角。</p>
<p>為了做到這一點，我們須使用餘弦定理。</p>
<p>如果你對餘弦定理有點生疏，這裡可以幫助你複習一下。</p>
<p>有一個任意三角形。</p>
<p>三角形中沒有任何的直角，將這邊的角度標為小a，而對邊的長度標為A。</p>
<p>我們再對這邊和這個角，以及這邊和這個叫做同樣的事。</p>
<p>以此類推，所有邊都標記為A, B, C，角都標記為a, b, c 。</p>
<p>餘弦定理就是這種關係。</p>
<p>它有點像畢達哥拉斯定理，不同之處是末端多出了cos a。</p>
<p>將餘弦定理套用於剛剛看到的特定三角形。</p>
<p>寫下此特殊關係很簡單。</p>
<p>我們可分離出 cosα ，只需要得知α角度作為條件。它是根據恆定連桿長度A1和A2以及最終執行器的位置x和y定義。</p>
<p>我們可寫出角度α和q2之間的簡單關係。並且我們從餘弦函數中得知cos q2必須等於 –cos α。</p>
<p>這次寫出餘弦在連接角q2的表達式。</p>
<p>我們繪製另一個紅色三角形，並應用三角函數。</p>
<p>如果我們知道q2，就可知道這個長度和這個三角形的長度。我們可以在連接角q2寫出正弦關係。</p>
<p>現在我們考慮這個大一點的三角形，它角度是β，此三角形的邊長由藍色表示。且三角形另一邊長度是這個。</p>
<p>我們可在此根據參數寫出角度β的表達式。回到之前畫的紅色三角形，我們可建立出q1和β的關係。</p>
<p>引入另一個角度ɣ，可寫出角度ɣ和提示框座標x和y之間的關係。現在我們可建構出角度β和ɣ與連接角度q1之間的關係。而且，整個關係看起來像這樣。</p>
<p>相當複雜的關係，它提供連接的角度，即最終執行器坐標 y 和 x 的 q1，以及一系列常數 a1 和 a2，它也是第二個關節角度 q2 的函數。</p>
<p>所以，總結我們在這裡得出了什麼。我們有q2餘弦方程式與q1方程式。餘弦函數在0對稱。</p>
<p>所以我們知道cosq2的值可能為正角和負角。我們選擇正角，表示我可以寫出此表達式。</p>
<p>現在我們能用逆向運動學來解決雙連桿機構。我們有兩個連接角 q1 和 q2 的表達式，根據最終執行器的x 和 y 以及一系列常數。</p>
<p>你要注意到兩方程式不是獨立的。事實上，q1方程式取決於q2的解。在這情況下，q2為負，我們將在q2反餘弦的解前面加上負號。</p>
<p>我們需求解q1，因此采用這個特定的三角形，之前求解的角度β以及根據y和x定義的角度ɣ。</p>
<p>q1、ɣ和β之間的關西，和之前求的不同。涉及到符號的變化。</p>
<p>然後我們可代換之前所有等式，並求得此q1方程式。同樣，這裡的符號發生了變化。先前，這是個負號。</p>
<p>這是雙連桿機構在此逆向運動學的總形式，其中q2為負。</p>
<p>讓我們比較兩個解決方案，q2為正和q2為負的情況。</p>
<p>第二部:</p>
<p>開啟字幕</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/J-hOQjeMXDo" title="YouTube video player" width="560"></iframe></p>
<p>中文字幕:</p>
<p>在這裡，我們有與前一篇相同的兩連桿機械手臂，但這次我們將使用分析方法來解決它，意味著我們將更多地依賴代數，特別是使用線性代數而不是幾何。</p>
<p>我們有一個表達式 E，它是表示機械手臂最終位置的齊次變換式，我們在上一課中看到了這一點，我們可以將最終位置寫為一系列基本齊次變換式。</p>
<p>Q1 旋轉，A1 沿 X 方向平移，Q2 旋轉，然後 A2 沿 X 方向平移。<br/>如果我將其展開，將所有變換相乘，就會得到此處所示的表達式 E ;它是一個三乘三的齊次變換矩陣，表示</p>
<p>機械手臂的最終的位置。</p>
<p>現在對於這個特殊的兩連桿機器人，我們只對它的最終位置感興趣，與它有關的是 X 和 Y 坐標，它們是齊次變換矩陣中的這兩個元素，所以我將把它們複製出來。</p>
<p>所以這裡又是我們對 X 和 Y 的表達式，我們要做的是一個相當常見的技巧，我們要將它平方並將這兩個方程相加，我得到一個看起來像這樣的關係式。</p>
<p>現在我可以根據最終位置X和Y以及機械手臂的常數A1及A2來求出關節角度Q2。</p>
<p>現在我要做的是應用角度之和的特性。</p>
<p>我將展開這些項，Q1 的正弦加 Q2 或 Q1 的餘弦加 Q2，為了讓生活更輕鬆一點，我將建立一些分部，所以只要有 cos Q2，我會將其取代為C2並且在有正弦Q2的地方，我會將其取代為S2。</p>
<p>當人們解決機械手臂運動學方程式時，這是一個相當常見的快速記法。</p>
<p>這是進行替換後的方程式。</p>
<p>看看這兩個方程式，我可以看到它們屬於一個眾所周知的形式，對於這種形式，有一個淺顯易見的解決方案。</p>
<p>所以我將只考慮其中一個方程，Y 的方程，並使用我們眾所周知的恆等式和它的解，我可以確定變量小 a、小 b 和小 c 的值，一旦我確定了這些，然後我可以寫下 Q1 的解決方程，在這種特殊情況下，x 相當於 theta。</p>
<p>這裡再次是我們對 Q1 的表達，從上一張幻燈片複製過來，我們可能還記得在我們早期的說明中，確定了這種特殊關係； X 平方加 Y 平方等於這個特定的複雜表達式。</p>
<p>因此，我可以將其替換並進行一些簡化，最終得到 Q1 的這個稍微不那麼複雜的表達式。<br/>這與我在上一節中遵循幾何方法求出的表達式一模一樣。</p>
<h2>W16 exam</h2>
<p><span>google drive連結:</span><a href="https://drive.google.com/drive/folders/1yGLWRymmOfIucmTXto5U4iZMExDvs5NC?usp=sharing" rel="nofollow">https://drive.google.com/drive/folders/1yGLWRymmOfIucmTXto5U4iZMExDvs5NC?usp=sharing</a></p>
<p><span>1.Onshape 零組件繪製</span></p>
<p><span>圖檔連結<a href="https://cad.onshape.com/documents/ba69fd6cd01409e870faec2f/w/2f154f1a806882e4b16bc221/e/2648d28f71480c3b30ffdeff" rel="nofollow">https://cad.onshape.com/documents/ba69fd6cd01409e870faec2f/w/2f154f1a806882e4b16bc221/e/2648d28f71480c3b30ffdeff</a></span></p>
<p><span>2.建立 CoppeliaSim 4.1.0 MTB robot 場景</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/MC1GtHejVyE" title="YouTube video player" width="560"></iframe></p>
<p><span>3.手臂末端加入 components-gripper-suction pad 吸盤</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/O10io1oBJyE" title="YouTube video player" width="560"></iframe></p>
<p><span>方向鍵控制手臂，3:吸取 4:吸盤向上 5:放下</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    Revolute_joint=sim.getObjectHandle('Revolute_joint')
    Revolute_joint1=sim.getObjectHandle('Revolute_joint1')
    Prismatic_joint=sim.getObjectHandle('Prismatic_joint')
    Revolute_joint0=sim.getObjectHandle('Revolute_joint0')
    sim.setJointTargetPosition(Revolute_joint,0)
    sim.setJointTargetPosition(Revolute_joint1,0)
    sim.setJointTargetPosition(Revolute_joint0,0)
    sim.setJointTargetPosition(Prismatic_joint,0)
    deg1=0
    deg2=0
    deg3=0
end

function sysCall_actuation()
    message,auxiliaryData=sim.getSimulatorMessage()
    while message~=-1 do
        if (message==sim.message_keypress) then
            if (auxiliaryData[1]==2009) then
            deg1=deg1+1
            deg3=deg2-deg1
            sim.setJointTargetPosition(Revolute_joint,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==2010) then
            deg1=deg1-1
            deg3=deg2-deg1
            sim.setJointTargetPosition(Revolute_joint,deg1*math.pi/180)
            end
            if (auxiliaryData[1]==2007) then
            deg2=deg2+1
            deg3=deg1-deg2
            sim.setJointTargetPosition(Revolute_joint1,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==2008) then
            deg2=deg2-1
            deg3=deg1-deg2
            sim.setJointTargetPosition(Revolute_joint1,deg2*math.pi/180)
            end
            if (auxiliaryData[1]==51) then
                sim.setJointTargetPosition(Prismatic_joint,-0.055)
                sim.setIntegerSignal("pad_switch",1)
            end
            if(auxiliaryData[1]==52) then
                sim.setJointTargetPosition(Prismatic_joint,0)
            end
            if(auxiliaryData[1]==53) then
                sim.setIntegerSignal("pad_switch",0)
            end
            sim.setJointTargetPosition(Revolute_joint0,deg3*math.pi/180)
        end
    message,auxiliaryData=sim.getSimulatorMessage()
    end
end
</pre>
<p><span>4.逆向運動學函式</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/cbeIsag9Y5M" title="YouTube video player" width="560"></iframe></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function moving(x,y)  
    a=0.467
    b=0.401
    c=math.pow(math.pow(x,2)+math.pow(y,2),0.5)
    s=(a+b+c)*0.5
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=area/(2*c)
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 then
        deg1_base=deg1_base+math.pi
    end
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=deg2-deg1
    print(deg3)
    sim.setJointTargetPosition(Revolute_joint,deg1)
    sim.setJointTargetPosition(Revolute_joint1,-deg2)
    sim.setJointTargetPosition(Revolute_joint0,deg3)
    
end

function pick_and_place(x,y)
    sim.setIntegerSignal("pad_switch",0)
    sim.wait(t)
    moving(0,0.868)
    sim.wait(t)
    moving(x,y)
    sim.wait(t)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(Prismatic_joint,-0.055)
    sim.wait(t)
    sim.setJointTargetPosition(Prismatic_joint,0)
    sim.wait(t)
end

function sysCall_threadmain()
    t=5
    Revolute_joint=sim.getObjectHandle('Revolute_joint')
    Revolute_joint1=sim.getObjectHandle('Revolute_joint1')
    Prismatic_joint=sim.getObjectHandle('Prismatic_joint')
    Revolute_joint0=sim.getObjectHandle('Revolute_joint0')
    sim.setJointTargetPosition(Revolute_joint,0)
    sim.setJointTargetPosition(Revolute_joint1,0)
    sim.setJointTargetPosition(Revolute_joint0,0)
    sim.setIntegerSignal("pad_switch",1)
    sim.setJointTargetPosition(Prismatic_joint,-0.055)
    sim.wait(t)
    sim.setJointTargetPosition(Prismatic_joint,0)
    sim.wait(t)
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostopre do
        x=0.2
        y=0.7
        moving(x,y)
        sim.wait(t)
        pick_and_place(x,y)
        x=-0.3
        y=-0.55
        moving(x,y)
        sim.wait(t)
        pick_and_place(x,y)
    end
end</pre>
<p><span>5.Python remote API 逆向運動學函式</span></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/5uZlng56JaU" title="YouTube video player" width="560"></iframe></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import sim as vrep
import math
import random
import time
import math

def moving(x,y):
    a=0.467
    b=0.401
    c=math.pow(math.pow(x,2)+math.pow(y,2),0.5)
    s=(a+b+c)*0.5
    area=math.pow((s*(s-a)*(s-b)*(s-c)),0.5)
    h=area/(2*c)
    deg1_base=math.atan(x/y)
    if x&lt;0 and y&lt;0 :
        deg1_base=deg1_base+math.pi
    deg1_tri=math.asin(h/a)
    deg1=deg1_base+deg1_tri
    deg2=math.pi-(0.5*math.pi-deg1_tri)-math.acos(h/b)
    deg3=deg2-deg1
    vrep.simxSetJointTargetPosition(clientID,Revolute_joint,deg1,opmode)
    vrep.simxSetJointTargetPosition(clientID,Revolute_joint1,(-deg2),opmode)
    vrep.simxSetJointTargetPosition(clientID,Revolute_joint0,deg3,opmode)

def pick_and_place(x,y):
    vrep.simxSetIntegerSignal(clientID,"pad_switch",0,opmode)
    time.sleep(tt)
    moving(0,0.868)
    time.sleep(tt)
    moving(x,y)
    time.sleep(tt)
    vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
    vrep.simxSetJointTargetPosition(clientID,Prismatic_joint,-0.055,opmode)
    time.sleep(tt)
    vrep.simxSetJointTargetPosition(clientID,Prismatic_joint,0,opmode)
    time.sleep(tt)



print ('Start')
 
vrep.simxFinish(-1)
 
clientID = vrep.simxStart('192.168.0.9', 19997, True, True, 5000, 5)
  
if clientID != -1:
    print ('Connected to remote API server')
      
    res = vrep.simxAddStatusbarMessage(
        clientID, "40823232",
        vrep.simx_opmode_oneshot)
    if res not in (vrep.simx_return_ok, vrep.simx_return_novalue_flag):
        print("Could not add a message to the status bar.")
  
     
    opmode = vrep.simx_opmode_oneshot_wait
    STREAMING = vrep.simx_opmode_streaming
  
     
    vrep.simxStartSimulation(clientID, opmode)
    ret,Revolute_joint=vrep.simxGetObjectHandle(clientID,"Revolute_joint",opmode)
    ret,Revolute_joint1=vrep.simxGetObjectHandle(clientID,"Revolute_joint1",opmode)
    ret,Revolute_joint0=vrep.simxGetObjectHandle(clientID,"Revolute_joint0",opmode)
    ret,Prismatic_joint=vrep.simxGetObjectHandle(clientID,"Prismatic_joint",opmode)
    tt=0.5
 

    while True :
        vrep.simxSetJointTargetPosition(clientID,Revolute_joint,0,opmode)
        vrep.simxSetJointTargetPosition(clientID,Revolute_joint1,0,opmode)
        vrep.simxSetJointTargetPosition(clientID,Revolute_joint0,0,opmode)
        vrep.simxSetJointTargetPosition(clientID,Prismatic_joint,-0.055,opmode)
        vrep.simxSetIntegerSignal(clientID,"pad_switch",1,opmode)
        time.sleep(tt)
        vrep.simxSetJointTargetPosition(clientID,Prismatic_joint,0,opmode)
        time.sleep(tt)
        while True:
            x=0.2
            y=0.7
            moving(x,y)
            time.sleep(tt)
            pick_and_place(x,y)
            x=-0.3
            y=-0.55
            moving(x,y)
            time.sleep(tt)
            pick_and_place(x,y)
</pre>
<h2>W17</h2>
<p>17週報告影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/4-7WbBg5G2o" title="YouTube video player" width="560"></iframe></p>
<h2>W18</h2>
<p>期末報告影片:</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Y_8xFXy30TA" title="YouTube video player" width="560"></iframe></p>
<p>心得:這次的<yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">協同產品設計實習</yt-formatted-string>，跟上學期課程最大的差別在於組員是自己選的，這樣的作法會讓組員在討論的時候更有共識，雖然課程有很多東西沒有完全懂，但是透過大家的討論能夠更了解程式碼的編寫；小組分工完成作業，是這次課程的目的，大家都發揮自己的專長，才有這次完成的作品。</p>
<p>小組stage3生產線:<strong><a href="https://40823246.github.io/cd2021/downloads/0618-stage1-bg3.zip">stage3-bg1.zip</a></strong></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/5DIH8zTgn8E" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h1>note</h1>
<p>課堂問題整理</p>
<h2>zoomit</h2>
<p><span><strong>CTRL+1</strong>縮放螢幕(能夠調整縮放倍率)</span></p>
<p><span><strong><span>Zoom</span></strong>模式的時候，按下<strong><span>滑鼠左鍵</span></strong>可以啟動「<span><strong>Draw</strong></span>模式」</span></p>
<p><span>退出<strong><span>Zoom</span></strong>模式，可以按<strong><span>滑鼠右鍵</span></strong>，或者是</span><span><b>ESC</b></span></p>
<p><span><b><img alt="" height="442" src="/images/Annotation 2020-10-23 145134.png" width="375"/></b></span></p>
<p><span><strong>CTRL+2</strong>進入<strong>DRAW</strong>模式(非縮放模式)</span></p>
<p><span><span><strong>CTRL+Z</strong></span>(退回上一步)</span></p>
<p><span><span><strong>隨意形狀</strong> </span>- 直接壓住<strong><span>滑鼠左鍵</span></strong>然後滑鼠移動想要的線條。</span></p>
<p><span><span><strong>直線</strong></span> - 壓住</span><span><span color="#ff00ff"><b>SHIFT</b></span></span><span>然後<strong><span>滑鼠左鍵</span></strong>然後話要的線條。</span></p>
<p><span><span><strong>方塊</strong></span> - 壓住<span><b>CTRL</b></span></span><span>然後<strong><span>滑鼠左鍵</span></strong>畫出方塊。</span></p>
<p><span><span><strong>圓圈</strong></span> - 壓住<span><b>TAB</b></span></span><span>然後<strong><span>滑鼠左鍵</span></strong>畫出圓圈。</span></p>
<p><span><span><strong>箭頭</strong> </span>- 壓住<span><strong>CTRL+SHIFT</strong></span></span><span>然後<strong><span>滑鼠左鍵</span></strong>畫出有箭頭的線。</span></p>
<p><span>按住<span><b>T</b></span>能夠打字(英文)</span></p>
<p><span><img alt="" height="444" src="/images/Annotation 2020-10-23 144638.png" width="379"/></span></p>
<h2>pelican.leo</h2>
<p><span>ctrl+i新增一頁</span></p>
<p><span>ctrl+u往上移動</span></p>
<p><span>ctrl+d往下移動</span></p>
<p><span>ctrl+r往右移動</span></p>
<p><span>ctrl+l往左移動</span></p>
<p><span>點兩下變更名稱</span></p>
<p><span><img alt="" height="331" src="/images/螢幕擷取畫面 2021-03-01 094823.png" width="450"/></span></p>
<p><span>編輯完成後，先save之後在local-blog按右鍵，再按goto script</span></p>
<p><span><img alt="" height="331" src="/images/螢幕擷取畫面 2021-03-01 095023.png" width="450"/></span></p>
<p><span>在黑窗執行這段文字後，就能到8444查看</span></p>
<p><span><img alt="" height="331" src="/images/螢幕擷取畫面 2021-03-01 102242.png" width="450"/></span></p>
<p><span>github-blog是直接推送到遠端(要在cd2021的倉儲提交)</span></p>
<p><span><img alt="" height="463" src="/images/螢幕擷取畫面 2021-03-01 105402.png" width="450"/></span></p>
<p><span>執行完畢後，add,commit,push</span></p>
<h2>coppeliasim</h2>
<p><img alt="" height="591" src="/images/螢幕擷取畫面 2021-03-14 161342.png" width="430"/></p>
<p>如果要讓零件產生碰撞要開啟respondable，上排表示同個基準的零件碰撞，下排是任何基準的零件碰撞</p>
<p>要讓零件動就要開啟dynamic</p>
<p><img alt="" height="611" src="/images/螢幕擷取畫面 2021-03-14 161407.png" width="430"/></p>
<p>如果要將物件隱藏要把camera visibility layers給取消</p>
<p><img alt="" height="496" src="/images/螢幕擷取畫面 2021-03-14 162238.png" width="526"/></p>
<p>這是將組合圖拆解，方便對各零件操作</p>
<p><img alt="" height="220" src="/images/螢幕擷取畫面 2021-03-14 162329.png" width="430"/></p>
<p><img alt="" height="222" src="/images/螢幕擷取畫面 2021-03-14 162401.png" width="430"/></p>
<p>要將兩物體綁在一起時，要按apply to selection(旋轉和移動)</p>
<h2>heroku</h2>
<p>先到<a href="https://heroku.com/">heroku</a>建立帳號，<span>以s+學號建立一個app(https://s學號.herokuapp.com)，之後</span></p>
<p><span>下載<a href="https://40823245.github.io/cd2021/downloads/heroku.7z">heroku</a>，放在data裡，並在start_ipv4.bat裡新增路徑</span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">set path_heroku=%Local%\heroku\bin;
 
%path_heroku%;</pre>
<p>關掉重開後，輸入</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">heroku version</pre>
<p>再進到自己組別的資料夾，輸入</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">git remote add heroku https://git.heroku.com/s40823232.git</pre>
<p>輸入完後可以在.git的config看到</p>
<p><img alt="" height="733" src="/images/螢幕擷取畫面 2021-05-16 140159.jpg" width="562"/></p>
<p>如果資料夾不是最新的檔案要先git pull，之後打heroku login -i，輸入heroku帳號的email和密碼，再打<span>git push heroku(以後push前資料夾不是最新的檔案都要先git pull)</span></p>
<h2>ssh</h2>
<p>在sh.exe創好金鑰，打ssh-keygen -t rsa -b 4096 -C "學號"，輸入要放的位置，按enter，在start_ipv4.bat新增</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">set GIT_HOME=%Disk%:\Portablegit\bin\
set GIT_SSH=%Disk%:\putty\plink.exe</pre>
<p>在.git的config新增url = git@github.com:40823232/cd2021.git，打開<span>puttygen.exe的</span><span>load，找到id_rsa，s</span><span>ave private key</span></p>
<p><span><img alt="" height="471" src="/images/螢幕擷取畫面 2021-05-17 132131.png" width="479"/></span></p>
<p><span>開putty.exe，選</span><span>github.com，有proxy要設定，在auth找剛才的ppk，回到session按save</span></p>
<p><span><img alt="" height="442" src="/images/螢幕擷取畫面 2021-05-17 132026.png" width="452"/></span></p>
<p><span>之後到github的setting裡的ssh，把</span>id_rsa.pub的內容貼到Key</p>
<h2>github been flagged</h2>
<p>因為github遭到封鎖，所以寫信給github</p>
<p><img alt="" height="509" src="/images/螢幕擷取畫面 2021-06-17 212935.png" width="900"/></p>
<p>鎖住期間使用gitlab，回覆後github就能正常使用了。</p>
<h1>W5</h1>
<p>乙班影片表格</p>
<p><iframe height="650" iframe="" src="https://docs.google.com/spreadsheets/d/e/2PACX-1vSYuENMShUqmueGJx7ol7iUW-6mSEY6VoPomTA76j5OysLtu-f53d-UvZgNmXcy4IzQugDd6_GAsfbn/pubhtml?gid=0&amp;single=true&amp;widget=true&amp;headers=false" width="400"></iframe></p>